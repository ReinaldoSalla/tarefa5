{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["currentInstance","negociacaoController","ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","PostService","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","importaNegociacoesSalvas","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","importaSalvas","importa","event","preventDefault","_criaNegociacao","postService","sendData","res","status","_limpaFormulario","json","console","log","data","message","err","property","deletaSalvas","apaga","mensagem","esvazia","_mensage","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":";;;;;;;;;;;;;AA6JO,aAASA,eAAT,GAA2B;AAC9B,eAAOC,oBAAP;AACH;;+BAFeD,e;;;;AA7JRE,4B,2BAAAA,gB;;AACAC,oB,mBAAAA,Q;;AACAC,2B,yBAAAA,e;;AACAC,wB,sBAAAA,Y;;AACAC,6B,8BAAAA,iB;;AACAC,sB,sBAAAA,U;;AACAC,gB,gBAAAA,I;;AACAC,sB,qBAAAA,U;;AACCC,uB,wBAAAA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEHC,gC;AACF,gDAAc;AAAA;;AACV,wBAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;AACA,yBAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,yBAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,yBAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;AACA,yBAAKO,iBAAL,GAAyB,IAAIX,IAAJ,CACrB,IAAIN,gBAAJ,EADqB,EAErB,IAAIE,eAAJ,CAAoBQ,EAAE,kBAAF,CAApB,CAFqB,EAGrB,UAHqB,EAGT,SAHS,EAGG,QAHH,EAGa,cAHb,CAAzB;AAIA,yBAAKQ,SAAL,GAAiB,IAAIZ,IAAJ,CACb,IAAIL,QAAJ,EADa,EACG,IAAIE,YAAJ,CAAiBO,EAAE,eAAF,CAAjB,CADH,EAEb,OAFa,CAAjB;AAGA,yBAAKS,WAAL,GAAmB,EAAnB;AACA,yBAAKC,QAAL,GAAgB,IAAIhB,iBAAJ,EAAhB;AACA,yBAAKiB,wBAAL;AACA;AACH;;;;2DAEsB;AAAA;;AACnB,6BAAKD,QAAL,CACKE,KADL,GAEKC,IAFL,CAEU;AAAA,mCACFC,YAAYC,OAAZ,CAAoB;AAAA,uCAChB,MAAKR,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC,CADgB;AAAA,6BAApB,CADE;AAAA,yBAFV,EAKKC,KALL,CAKW;AAAA,mCAAQ,MAAKV,SAAL,CAAeW,KAAf,GAAuBC,IAA/B;AAAA,yBALX;AAMDC,oCAAY,YAAM;AACd,kCAAKC,kBAAL;AACH,yBAFD,EAEG,IAFH;AAGF;;;+DAE0B;AAAA;;AACvB,6BAAKZ,QAAL,CACKa,aADL,CACmB,KAAKhB,iBAAL,CAAuBO,WAD1C,EAEKD,IAFL,CAEU;AAAA,mCAAeC,YAAYC,OAAZ,CAAoB,sBAAc;AACnD,uCAAKR,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC;AACA;AACH,6BAHoB,CAAf;AAAA,yBAFV,EAMKC,KANL,CAMW;AAAA,mCAAQ,OAAKV,SAAL,CAAeW,KAAf,GAAuBC,IAA/B;AAAA,yBANX;AAOH;;;yDAEoB;AAAA;;AACjB,6BAAKV,QAAL,CACKc,OADL,CACa,KAAKjB,iBAAL,CAAuBO,WADpC,EAEKD,IAFL,CAEU;AAAA,mCAAeC,YAAYC,OAAZ,CAAoB,sBAAc;AACnD,uCAAKR,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC;AACA,uCAAKT,SAAL,CAAeW,KAAf,GAAuB,mCAAvB;AACH,6BAHoB,CAAf;AAAA,yBAFV,EAMKD,KANL,CAMW;AAAA,mCAAQ,OAAKV,SAAL,CAAeW,KAAf,GAAuBC,IAA/B;AAAA,yBANX;AAOH;;;6CAsBQK,K,EAAO;AAAA;;AACZA,8BAAMC,cAAN;AACA,4BAAIT,aAAa,KAAKU,eAAL,EAAjB;AACA,4BAAMC,cAAc,IAAI9B,WAAJ,CAChB,KAAKM,UADW,EAEhB,KAAKC,gBAFW,EAGhB,KAAKC,WAHW,CAApB;AAKAsB,oCAAYC,QAAZ,GACKhB,IADL,CACU,eAAO;AACT,gCAAGiB,IAAIC,MAAJ,KAAe,GAAlB,EAAuB;AACnB,uCAAKvB,SAAL,CAAeW,KAAf,GAAuB,mCAAvB;AACA,uCAAKa,gBAAL;AACA,uCAAKzB,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC;AACH,6BAJD,MAIO;AACHa,oCAAIG,IAAJ,GACKpB,IADL,CACU,gBAAQ;AACV,2CAAKL,SAAL,CAAeW,KAAf,GAAuB,yCAAvB;AACAe,4CAAQC,GAAR,SAAmBC,KAAKC,OAAxB;AACA,wCAAG,OAAOD,KAAKC,OAAZ,KAAwB,QAA3B,EAAqC;AACjCD,6CAAKC,OAAL,CAAatB,OAAb,CAAqB,eAAO;AACxBmB,oDAAQC,GAAR,CAAYG,IAAIC,QAAhB;AACA,gDAAID,IAAIC,QAAJ,KAAiB,YAArB,EAAmC;AAC/BL,wDAAQC,GAAR,CAAY,qBAAZ;AACH,6CAFD,MAEO,IAAIG,IAAIC,QAAJ,KAAiB,OAArB,EAA8B;AACjCL,wDAAQC,GAAR,CAAY,gBAAZ;AACH;AACJ,yCAPD;AAQH,qCATD,MAUK;AACDD,gDAAQC,GAAR,CAAYC,KAAKC,OAAjB;AACH;AACJ,iCAjBL;AAkBH;AACJ,yBA1BL,EA2BKnB,KA3BL,CA2BW;AAAA,mCAAOgB,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,yBA3BX;AA4BH;;;4CAEO;AAAA;;AACJ,6BAAK5B,QAAL,CAAc8B,YAAd;AACA,6BAAK9B,QAAL,CACK+B,KADL,GAEK5B,IAFL,CAEU,oBAAY;AACd,mCAAKL,SAAL,CAAeW,KAAf,GAAuBuB,QAAvB;AACA,mCAAKnC,iBAAL,CAAuBoC,OAAvB;AACH,yBALL,EAMKzB,KANL,CAMW;AAAA,mCAAQ,OAAK0B,QAAL,CAAczB,KAAd,GAAsBC,IAA9B;AAAA,yBANX;AAOH;;;sDAEiB;AACd,+BAAO,IAAIvB,UAAJ,CACHF,WAAWkD,aAAX,CAAyB,KAAKzC,UAAL,CAAgB0C,KAAzC,CADG,EAEHC,SAAS,KAAK1C,gBAAL,CAAsByC,KAA/B,CAFG,EAGHE,WAAW,KAAK1C,WAAL,CAAiBwC,KAA5B,CAHG,CAAP;AAIH;;;uDAEkB;AACf,6BAAK1C,UAAL,CAAgB0C,KAAhB,GAAwB,EAAxB;AACA,6BAAKzC,gBAAL,CAAsByC,KAAtB,GAA8B,CAA9B;AACA,6BAAKxC,WAAL,CAAiBwC,KAAjB,GAAyB,GAAzB;AACA,6BAAK1C,UAAL,CAAgB6C,KAAhB;AACH;;;2CAEMC,M,EAAQ;AACX,4BAAG,KAAKzC,WAAL,IAAoByC,MAAvB,EAA+B;AAC3B,iCAAK3C,iBAAL,CAAuB4C,YAAvB;AACH,yBAFD,MAEO;AACH,iCAAK5C,iBAAL,CAAuB6C,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,EAAEH,MAAF,IAAYI,EAAEJ,MAAF,CAAtB;AAAA,6BAA9B;AACH;AACD,6BAAKzC,WAAL,GAAmByC,MAAnB;AACH;;;;;;AAID7D,gC,GAAuB,IAAIU,oBAAJ,E","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem';\r\nimport {NegociacoesView} from '../views/NegociacoesView';\r\nimport {MensagemView} from '../views/MensagemView';\r\nimport {NegociacaoService} from '../services/NegociacaoService';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {Bind} from '../helpers/Bind';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport { PostService } from '../services/post-service';\r\n\r\nclass NegociacaoController {\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(), \r\n            new NegociacoesView($('#negociacoesView')), \r\n            'adiciona', 'esvazia' , 'ordena', 'inverteOrdem');\r\n        this._mensagem = new Bind(\r\n            new Mensagem(), new MensagemView($('#mensagemView')),\r\n            'texto');    \r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();\r\n        this.importaNegociacoesSalvas();\r\n        //_this.automaticallyImport();\r\n    }\r\n    \r\n    _automaticallyImport() {\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n       setInterval(() => {\r\n           this.importaNegociacoes();\r\n       }, 3000);                \r\n    }\r\n\r\n    importaNegociacoesSalvas() {\r\n        this._service\r\n            .importaSalvas(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                //this._mensagem.texto = 'Negociações do MongoDB importadas';   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);   \r\n    }\r\n    \r\n    importaNegociacoes() {\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas'   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);                              \r\n    }\r\n\r\n    \r\n    // IndexedDB\r\n    /*\r\n    adiciona(event) {\r\n        event.preventDefault();\r\n        \r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n    */ \r\n\r\n    // MongoDB\r\n    sendPost(event) {\r\n        event.preventDefault();\r\n        let negociacao = this._criaNegociacao();\r\n        const postService = new PostService(\r\n            this._inputData,\r\n            this._inputQuantidade,\r\n            this._inputValor\r\n        )\r\n        postService.sendData()\r\n            .then(res => {\r\n                if(res.status === 201) {\r\n                    this._mensagem.texto = \"Negociação cadastrada com sucesso\";\r\n                    this._limpaFormulario();   \r\n                    this._listaNegociacoes.adiciona(negociacao);\r\n                } else {\r\n                    res.json()\r\n                        .then(data => {\r\n                            this._mensagem.texto = \"Não foi possível cadastrar a negociação\";\r\n                            console.log(typeof data.message);\r\n                            if(typeof data.message !== \"string\") {\r\n                                data.message.forEach(err => {\r\n                                    console.log(err.property);\r\n                                    if (err.property === \"quantidade\") {\r\n                                        console.log(\"error in quantidade\");\r\n                                    } else if (err.property === \"valor\") {\r\n                                        console.log(\"error in valor\");\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                console.log(data.message);\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    apaga() {    \r\n        this._service.deletaSalvas();\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();                \r\n            })\r\n            .catch(erro => this._mensage.texto = erro);\r\n    }\r\n    \r\n    _criaNegociacao() {\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));    \r\n    }\r\n    \r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();   \r\n    }\r\n    \r\n    ordena(coluna) {\r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem(); \r\n        } else {\r\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;    \r\n    }\r\n}\r\n\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n    return negociacaoController;\r\n}"]}