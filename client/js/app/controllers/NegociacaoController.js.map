{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["currentInstance","negociacaoController","ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","PostService","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","importaNegociacoesSalvas","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","importaSalvas","importa","event","preventDefault","_criaNegociacao","postService","sendData","res","status","_limpaFormulario","json","Array","isArray","data","message","msg","err","property","mensagem","console","error","deletaSalvas","apaga","esvazia","_mensage","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem';\r\nimport {NegociacoesView} from '../views/NegociacoesView';\r\nimport {MensagemView} from '../views/MensagemView';\r\nimport {NegociacaoService} from '../services/NegociacaoService';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {Bind} from '../helpers/Bind';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport { PostService } from '../services/post-service';\r\n\r\nclass NegociacaoController {\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(), \r\n            new NegociacoesView($('#negociacoesView')), \r\n            'adiciona', 'esvazia' , 'ordena', 'inverteOrdem');\r\n        this._mensagem = new Bind(\r\n            new Mensagem(), new MensagemView($('#mensagemView')),\r\n            'texto');    \r\n        this._ordemAtual = '';\r\n        this._service = new NegociacaoService();\r\n        this.importaNegociacoesSalvas();\r\n        //_this.automaticallyImport();\r\n    }\r\n    \r\n    _automaticallyImport() {\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n       setInterval(() => {\r\n           this.importaNegociacoes();\r\n       }, 3000);                \r\n    }\r\n\r\n    importaNegociacoesSalvas() {\r\n        this._service\r\n            .importaSalvas(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                //this._mensagem.texto = 'Negociações do MongoDB importadas';   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);   \r\n    }\r\n    \r\n    importaNegociacoes() {\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas'   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);                              \r\n    }\r\n\r\n    \r\n    // IndexedDB\r\n    /*\r\n    adiciona(event) {\r\n        event.preventDefault();\r\n        \r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n    */ \r\n\r\n    // MongoDB\r\n    sendPost(event) {\r\n        event.preventDefault();\r\n        let negociacao = this._criaNegociacao();\r\n        const postService = new PostService(\r\n            this._inputData,\r\n            this._inputQuantidade,\r\n            this._inputValor\r\n        )\r\n        postService.sendData()\r\n            .then(res => {\r\n                if (res.status === 201) {\r\n                    this._mensagem.texto = \"Negotiation registered with success\";\r\n                    this._limpaFormulario();   \r\n                    this._listaNegociacoes.adiciona(negociacao);\r\n                } else {\r\n                    res.json()\r\n                        .then(data => {\r\n                            if (Array.isArray(data.message)) {\r\n                                data.message.forEach(err => {\r\n                                    // Rendering the raw messages from the backend\r\n                                    /*\r\n                                    Object.entries(err.constraints).forEach(([key, val]) => {\r\n                                        this._mensagem.texto = val;\r\n                                    })\r\n                                    */\r\n                                    // Rendering customized messages\r\n                                    const msg = \"must be between 1 and 100\";\r\n                                    if (err.property === \"quantidade\")\r\n                                        this._mensagem.texto = `Quantidade ${msg}`;\r\n                                    else if (err.property === \"valor\")\r\n                                        this._mensagem.texto = `Valor ${msg}`;\r\n                                    else \r\n                                        this.mensagem.texto = \"Unexpected error\";\r\n                                })\r\n                            }\r\n                            else {\r\n                                this._mensagem.texto = data.message;\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this._mensagem.texto = \"Unexpected Error\";\r\n                console.error(err);\r\n            })\r\n    }\r\n    \r\n    apaga() {    \r\n        this._service.deletaSalvas();\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();                \r\n            })\r\n            .catch(erro => this._mensage.texto = erro);\r\n    }\r\n    \r\n    _criaNegociacao() {\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));    \r\n    }\r\n    \r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();   \r\n    }\r\n    \r\n    ordena(coluna) {\r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem(); \r\n        } else {\r\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;    \r\n    }\r\n}\r\n\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n    return negociacaoController;\r\n}\r\n"]}