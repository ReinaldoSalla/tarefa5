{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente","obterNegociacoesSalvas","delete"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n    \r\n    obterNegociacoesDaSemana() {   \r\n        return this._http\r\n            .get('api/negotiations/thisWeek')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });  \r\n    }\r\n    \r\n    obterNegociacoesDaSemanaAnterior() { \r\n        return this._http\r\n            .get('api/negotiations/lastWeek')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });   \r\n    }\r\n    \r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http\r\n            .get('api/negotiations/beforeLastWeek')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });  \r\n    }\r\n\r\n    obterNegociacoesSalvas() {\r\n        return this._http\r\n            .get('api/negotiations/')\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações salvas');\r\n            });  \r\n    }\r\n    \r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\t} \r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            });\r\n    }\r\n\r\n    \r\n    lista() {\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.listaTodos())\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações')\r\n                })\r\n    }\r\n    \r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações')\r\n            })\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.some(negociacaoExistente => \r\n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            })\r\n    }\r\n\r\n    importaSalvas(listaAtual) {\r\n        return this.obterNegociacoesSalvas()\r\n                 .then(periodos => {\r\n                     let negociacoes = periodos\r\n                         .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                         .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n                     return negociacoes;\r\n                 }).catch(erro => {\r\n                     throw new Error(erro);\r\n                 });\r\n    }\r\n\r\n    deletaSalvas() {\r\n        this._http.delete('api/negotiations/')\r\n    }\r\n}"]}